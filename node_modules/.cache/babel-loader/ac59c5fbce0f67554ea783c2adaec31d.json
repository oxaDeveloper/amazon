{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Attractor = void 0;\n\nconst Utils_1 = require(\"../../../Utils\");\n\nconst Core_1 = require(\"../../../Core\");\n\nclass Attractor extends Core_1.ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n\n  isEnabled() {\n    const container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = options.interactivity.events;\n\n    if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n      return false;\n    }\n\n    const hoverMode = events.onHover.mode,\n          clickMode = events.onClick.mode;\n    return (0, Utils_1.isInArray)(\"attract\", hoverMode) || (0, Utils_1.isInArray)(\"attract\", clickMode);\n  }\n\n  reset() {}\n\n  interact() {\n    const container = this.container,\n          options = container.actualOptions,\n          mouseMoveStatus = container.interactivity.status === Core_1.Constants.mouseMoveEvent,\n          events = options.interactivity.events,\n          hoverEnabled = events.onHover.enable,\n          hoverMode = events.onHover.mode,\n          clickEnabled = events.onClick.enable,\n          clickMode = events.onClick.mode;\n\n    if (mouseMoveStatus && hoverEnabled && (0, Utils_1.isInArray)(\"attract\", hoverMode)) {\n      this.hoverAttract();\n    } else if (clickEnabled && (0, Utils_1.isInArray)(\"attract\", clickMode)) {\n      this.clickAttract();\n    }\n  }\n\n  hoverAttract() {\n    const container = this.container;\n    const mousePos = container.interactivity.mouse.position;\n\n    if (!mousePos) {\n      return;\n    }\n\n    const attractRadius = container.retina.attractModeDistance;\n    this.processAttract(mousePos, attractRadius, new Core_1.Circle(mousePos.x, mousePos.y, attractRadius));\n  }\n\n  processAttract(position, attractRadius, area) {\n    const container = this.container;\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    const query = container.particles.quadTree.query(area);\n\n    for (const particle of query) {\n      const {\n        dx,\n        dy,\n        distance\n      } = (0, Utils_1.getDistances)(particle.position, position);\n      const velocity = attractOptions.speed * attractOptions.factor;\n      const attractFactor = (0, Utils_1.clamp)((0, Utils_1.calcEasing)(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n      const normVec = Core_1.Vector.create(distance === 0 ? velocity : dx / distance * attractFactor, distance === 0 ? velocity : dy / distance * attractFactor);\n      particle.position.subFrom(normVec);\n    }\n  }\n\n  clickAttract() {\n    const container = this.container;\n\n    if (!container.attract.finish) {\n      if (!container.attract.count) {\n        container.attract.count = 0;\n      }\n\n      container.attract.count++;\n\n      if (container.attract.count === container.particles.count) {\n        container.attract.finish = true;\n      }\n    }\n\n    if (container.attract.clicking) {\n      const mousePos = container.interactivity.mouse.clickPosition;\n\n      if (!mousePos) {\n        return;\n      }\n\n      const attractRadius = container.retina.attractModeDistance;\n      this.processAttract(mousePos, attractRadius, new Core_1.Circle(mousePos.x, mousePos.y, attractRadius));\n    } else if (container.attract.clicking === false) {\n      container.attract.particles = [];\n    }\n\n    return;\n  }\n\n}\n\nexports.Attractor = Attractor;","map":{"version":3,"sources":["/Users/sukhrobmajidov/Desktop/myPersonalWeb/reactNext/amazon/node_modules/tsparticles/Interactions/External/Attract/Attractor.js"],"names":["Object","defineProperty","exports","value","Attractor","Utils_1","require","Core_1","ExternalInteractorBase","constructor","container","isEnabled","options","actualOptions","mouse","interactivity","events","position","onHover","enable","clickPosition","onClick","hoverMode","mode","clickMode","isInArray","reset","interact","mouseMoveStatus","status","Constants","mouseMoveEvent","hoverEnabled","clickEnabled","hoverAttract","clickAttract","mousePos","attractRadius","retina","attractModeDistance","processAttract","Circle","x","y","area","attractOptions","modes","attract","query","particles","quadTree","particle","dx","dy","distance","getDistances","velocity","speed","factor","attractFactor","clamp","calcEasing","easing","maxSpeed","normVec","Vector","create","subFrom","finish","count","clicking"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attractor = void 0;\nconst Utils_1 = require(\"../../../Utils\");\nconst Core_1 = require(\"../../../Core\");\nclass Attractor extends Core_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return (0, Utils_1.isInArray)(\"attract\", hoverMode) || (0, Utils_1.isInArray)(\"attract\", clickMode);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Core_1.Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && (0, Utils_1.isInArray)(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && (0, Utils_1.isInArray)(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Core_1.Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const attractOptions = container.actualOptions.interactivity.modes.attract;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = (0, Utils_1.getDistances)(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = (0, Utils_1.clamp)((0, Utils_1.calcEasing)(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Core_1.Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Core_1.Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\nexports.Attractor = Attractor;\n"]},"metadata":{},"sourceType":"script"}