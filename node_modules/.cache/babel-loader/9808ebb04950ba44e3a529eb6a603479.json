{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Repulser = void 0;\n\nconst Utils_1 = require(\"../../../Utils\");\n\nconst Core_1 = require(\"../../../Core\");\n\nclass Repulser extends Core_1.ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n\n  isEnabled() {\n    const container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = options.interactivity.events,\n          divs = events.onDiv,\n          divRepulse = (0, Utils_1.isDivModeEnabled)(\"repulse\", divs);\n\n    if (!(divRepulse || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n      return false;\n    }\n\n    const hoverMode = events.onHover.mode,\n          clickMode = events.onClick.mode;\n    return (0, Utils_1.isInArray)(\"repulse\", hoverMode) || (0, Utils_1.isInArray)(\"repulse\", clickMode) || divRepulse;\n  }\n\n  reset() {}\n\n  interact() {\n    const container = this.container,\n          options = container.actualOptions,\n          mouseMoveStatus = container.interactivity.status === Core_1.Constants.mouseMoveEvent,\n          events = options.interactivity.events,\n          hoverEnabled = events.onHover.enable,\n          hoverMode = events.onHover.mode,\n          clickEnabled = events.onClick.enable,\n          clickMode = events.onClick.mode,\n          divs = events.onDiv;\n\n    if (mouseMoveStatus && hoverEnabled && (0, Utils_1.isInArray)(\"repulse\", hoverMode)) {\n      this.hoverRepulse();\n    } else if (clickEnabled && (0, Utils_1.isInArray)(\"repulse\", clickMode)) {\n      this.clickRepulse();\n    } else {\n      (0, Utils_1.divModeExecute)(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n    }\n  }\n\n  singleSelectorRepulse(selector, div) {\n    const container = this.container,\n          query = document.querySelectorAll(selector);\n\n    if (!query.length) {\n      return;\n    }\n\n    query.forEach(item => {\n      const elem = item,\n            pxRatio = container.retina.pixelRatio,\n            pos = {\n        x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n        y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n      },\n            repulseRadius = elem.offsetWidth / 2 * pxRatio,\n            area = div.type === \"circle\" ? new Core_1.Circle(pos.x, pos.y, repulseRadius) : new Core_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n            divs = container.actualOptions.interactivity.modes.repulse.divs,\n            divRepulse = (0, Utils_1.divMode)(divs, elem);\n      this.processRepulse(pos, repulseRadius, area, divRepulse);\n    });\n  }\n\n  hoverRepulse() {\n    const container = this.container,\n          mousePos = container.interactivity.mouse.position;\n\n    if (!mousePos) {\n      return;\n    }\n\n    const repulseRadius = container.retina.repulseModeDistance;\n    this.processRepulse(mousePos, repulseRadius, new Core_1.Circle(mousePos.x, mousePos.y, repulseRadius));\n  }\n\n  processRepulse(position, repulseRadius, area, divRepulse) {\n    var _a;\n\n    const container = this.container,\n          query = container.particles.quadTree.query(area),\n          repulseOptions = container.actualOptions.interactivity.modes.repulse;\n\n    for (const particle of query) {\n      const {\n        dx,\n        dy,\n        distance\n      } = (0, Utils_1.getDistances)(particle.position, position),\n            velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor,\n            repulseFactor = (0, Utils_1.clamp)((0, Utils_1.calcEasing)(1 - distance / repulseRadius, repulseOptions.easing) * velocity, 0, repulseOptions.maxSpeed),\n            normVec = Core_1.Vector.create(distance === 0 ? velocity : dx / distance * repulseFactor, distance === 0 ? velocity : dy / distance * repulseFactor);\n      particle.position.addTo(normVec);\n    }\n  }\n\n  clickRepulse() {\n    const container = this.container;\n\n    if (!container.repulse.finish) {\n      if (!container.repulse.count) {\n        container.repulse.count = 0;\n      }\n\n      container.repulse.count++;\n\n      if (container.repulse.count === container.particles.count) {\n        container.repulse.finish = true;\n      }\n    }\n\n    if (container.repulse.clicking) {\n      const repulseDistance = container.retina.repulseModeDistance,\n            repulseRadius = Math.pow(repulseDistance / 6, 3),\n            mouseClickPos = container.interactivity.mouse.clickPosition;\n\n      if (mouseClickPos === undefined) {\n        return;\n      }\n\n      const range = new Core_1.Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius),\n            query = container.particles.quadTree.query(range);\n\n      for (const particle of query) {\n        const {\n          dx,\n          dy,\n          distance\n        } = (0, Utils_1.getDistances)(mouseClickPos, particle.position),\n              d = distance ** 2,\n              velocity = container.actualOptions.interactivity.modes.repulse.speed,\n              force = -repulseRadius * velocity / d;\n\n        if (d <= repulseRadius) {\n          container.repulse.particles.push(particle);\n          const vect = Core_1.Vector.create(dx, dy);\n          vect.length = force;\n          particle.velocity.setTo(vect);\n        }\n      }\n    } else if (container.repulse.clicking === false) {\n      for (const particle of container.repulse.particles) {\n        particle.velocity.setTo(particle.initialVelocity);\n      }\n\n      container.repulse.particles = [];\n    }\n  }\n\n}\n\nexports.Repulser = Repulser;","map":{"version":3,"sources":["/Users/sukhrobmajidov/Desktop/myPersonalWeb/reactNext/amazon/node_modules/tsparticles/Interactions/External/Repulse/Repulser.js"],"names":["Object","defineProperty","exports","value","Repulser","Utils_1","require","Core_1","ExternalInteractorBase","constructor","container","isEnabled","options","actualOptions","mouse","interactivity","events","divs","onDiv","divRepulse","isDivModeEnabled","onHover","enable","position","onClick","clickPosition","hoverMode","mode","clickMode","isInArray","reset","interact","mouseMoveStatus","status","Constants","mouseMoveEvent","hoverEnabled","clickEnabled","hoverRepulse","clickRepulse","divModeExecute","selector","div","singleSelectorRepulse","query","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","Circle","Rectangle","modes","repulse","divMode","processRepulse","mousePos","repulseModeDistance","_a","particles","quadTree","repulseOptions","particle","dx","dy","distance","getDistances","velocity","speed","factor","repulseFactor","clamp","calcEasing","easing","maxSpeed","normVec","Vector","create","addTo","finish","count","clicking","repulseDistance","Math","pow","mouseClickPos","undefined","range","d","force","push","vect","setTo","initialVelocity"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Repulser = void 0;\nconst Utils_1 = require(\"../../../Utils\");\nconst Core_1 = require(\"../../../Core\");\nclass Repulser extends Core_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events, divs = events.onDiv, divRepulse = (0, Utils_1.isDivModeEnabled)(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return (0, Utils_1.isInArray)(\"repulse\", hoverMode) || (0, Utils_1.isInArray)(\"repulse\", clickMode) || divRepulse;\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Core_1.Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && (0, Utils_1.isInArray)(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && (0, Utils_1.isInArray)(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            (0, Utils_1.divModeExecute)(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Core_1.Circle(pos.x, pos.y, repulseRadius)\n                : new Core_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = container.actualOptions.interactivity.modes.repulse.divs, divRepulse = (0, Utils_1.divMode)(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const repulseRadius = container.retina.repulseModeDistance;\n        this.processRepulse(mousePos, repulseRadius, new Core_1.Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        for (const particle of query) {\n            const { dx, dy, distance } = (0, Utils_1.getDistances)(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = (0, Utils_1.clamp)((0, Utils_1.calcEasing)(1 - distance / repulseRadius, repulseOptions.easing) * velocity, 0, repulseOptions.maxSpeed), normVec = Core_1.Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    clickRepulse() {\n        const container = this.container;\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance, repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Core_1.Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range);\n            for (const particle of query) {\n                const { dx, dy, distance } = (0, Utils_1.getDistances)(mouseClickPos, particle.position), d = distance ** 2, velocity = container.actualOptions.interactivity.modes.repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Core_1.Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n}\nexports.Repulser = Repulser;\n"]},"metadata":{},"sourceType":"script"}